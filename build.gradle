buildscript {
    ext {
        queryDslVersion = "5.0.0"	// (1) querydsl의 버전
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //(2) querydsl 플러그인 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    //Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    // AWS S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'
//    implementation 'software.amazon.awssdk:aws-sdk-java:2.18.35'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" //(3), (4) 라이브러리 dependency를 추가 및 버전 명시
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"//(4)
}

//    /** clean 태스크 실행시 QClass 삭제 */
//    clean {
//        delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
//    }
/**
 * 인텔리제이 Annotation processor 에 생성되는 'src/main/generated' 디렉터리 삭제
 */
task cleanGeneatedDir(type: Delete) { // 인텔리제이 annotation processor 가 생성한 Q클래스가 clean 태스크로 삭제되는 게 불편하다면 둘 중에 하나를 선택
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}


//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"	// (5) querydsl 에서 사용할 경로를 선언
querydsl {	// (6) querydsl 설정을 추가, JPA 사용 여부와 사용할 경로를 지정
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {	// (7)  build 시 사용할 sourceSet 추가
    main.java.srcDir querydslDir
}
configurations {	// (8) querydsl 이 compileClassPath 를 상속하도록 설정
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {	// (9) querydsl 컴파일시 사용할 옵션을 설정
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
